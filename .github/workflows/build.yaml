name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: "30 23 * * *"
  push:
    branches:
      - main
      - custom

env: 
  TZ: Asia/Shanghai

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Workflow runs delete
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true

      - name: Get Data
        run: |
          git clone https://github.com/v2fly/domain-list-community repo && mv repo/data ./ && rm -rf repo
        shell: bash

      - name: Append more domains
        run: |
          curl -LR -o- "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Surge/NivodTV/NivodTV.list" | grep -v "#" | sed 's/DOMAIN-SUFFIX,/domain:/g; s/DOMAIN-KEYWORD,/keyword:/g' > data/nivodtv
          echo "full:c.olddddd.com" >> data/nivodtv
          echo "include:nivodtv" >> ./data/geolocation-\!cn
          sed -i '/:@!cn/d' ./data/geolocation-cn
          curl -LR -o- "https://github.com/d2184/geosite/raw/custom/direct.txt" | grep -v "#" >> ./data/geolocation-cn
          sed -i '/:@cn/d' ./data/geolocation-\!cn
        shell: bash

      - name: Build
        run: |
          mkdir -p ./publish/text
          go run ./ --outputdir=./publish/ --exportlists=private,tld-cn,geolocation-cn,geolocation-\!cn,category-games,category-porn,youtube

      - name: Generate text rule-set
        run: |
          sed 's/domain:/DOMAIN-SUFFIX,/' ./publish/tld-cn.txt > ./publish/text/cn.txt
          sed 's/:@.*//; s/full:/DOMAIN,/; s/domain:/DOMAIN-SUFFIX,/; s/keyword:/DOMAIN-KEYWORD,/; s/regexp:/DOMAIN-REGEX,/; /^$/d' ./publish/geolocation-cn.txt >> ./publish/text/cn.txt
          sed 's/:@.*//; s/full:/DOMAIN,/; s/domain:/DOMAIN-SUFFIX,/; s/keyword:/DOMAIN-KEYWORD,/; s/regexp:/DOMAIN-REGEX,/; /^$/d' ./publish/geolocation-\!cn.txt > ./publish/text/geolocation-\!cn.txt
          sed 's/:@.*//; s/full:/DOMAIN,/; s/domain:/DOMAIN-SUFFIX,/; s/keyword:/DOMAIN-KEYWORD,/; s/regexp:/DOMAIN-REGEX,/; /^$/d' ./publish/category-porn.txt > ./publish/text/category-porn.txt
          grep -v ":@cn" ./publish/category-games.txt | sed 's/:@.*//; s/full:/DOMAIN,/; s/domain:/DOMAIN-SUFFIX,/; s/keyword:/DOMAIN-KEYWORD,/; s/regexp:/DOMAIN-REGEX,/; /^$/d' > ./publish/text/games-cn.txt
          sed 's/full:/DOMAIN,/; s/domain:/DOMAIN-SUFFIX,/; s/regexp:/DOMAIN-REGEX,/; /^$/d' ./publish/private.txt > ./publish/text/private.txt
          curl -LR -o- "https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Surge/NivodTV/NivodTV.list" | grep -v "#" > publish/text/nivodtv.txt
          echo "DOMAIN,c.olddddd.com" >> publish/text/nivodtv.txt
          sed 's/:@.*//; s/full:/DOMAIN,/; s/domain:/DOMAIN-SUFFIX,/; s/regexp:/DOMAIN-REGEX,/; /^$/d' ./publish/youtube.txt > publish/text/youtube.txt
          rm ./publish/*.txt

      - name: Generate db and metadb files
        if: success()
        run: |
          curl -sSL https://github.com/d2184/geo/releases/download/latest/geo-linux-amd64 -o ./geo && chmod +x ./geo
          ./geo convert site -i v2ray -o sing -f ./publish/geosite.db ./publish/geosite.dat
        shell: bash

      - name: Generate sing-box rule-set
        run: |
          mkdir -p ./publish/sing-rule ./tools
          curl -sSL https://github.com/SagerNet/sing-box/releases/download/v1.8.8/sing-box-1.8.8-linux-amd64.tar.gz -o ./tools/sing-box.tar.gz && tar zxvf ./tools/sing-box.tar.gz -C ./tools && mv ./tools/sing-box-1.8.8-linux-amd64/sing-box ./
          rm -rf ./tools && chmod +x ./sing-box

          list=($(./sing-box geosite list -f ./publish/geosite.db | sed 's/ (.*)$//g'))
          for ((i = 0; i < ${#list[@]}; i++)); do
            ./sing-box geosite export ${list[i]} -f ./publish/geosite.db -o ./${list[i]}.json
            ./sing-box rule-set compile ./${list[i]}.json -o ./publish/sing-rule/${list[i]}.srs
          done
        shell: bash

      - name: Publish
        run: |
          cd publish || exit 1
          git init --initial-branch=release
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git add -A
          git commit -m "Last Updated $(date '+%Y-%m-%d %H:%M:%S')"
          git remote add geosite "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geosite release
